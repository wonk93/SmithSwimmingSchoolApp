@model X.PagedList.IPagedList<SmithSwimmingSchoolApp.Models.Report>
@using X.PagedList.Mvc.Core; 
@{
    ViewData["Title"] = "Index";
}
<div class="container rounded border p-3 w-50" style="background-color: #e3f2fd;">
    <h1 class="text-center">Report</h1>
</div>

<form method="get" action="@Url.Action("Index")" class="d-flex justify-content-center mt-4">
    <div class="input-group w-50">
        <input type="text" class="form-control rounded-start" id="searchName" name="searchName"
               placeholder="Search Swimmer..." value="@ViewData["SearchName"]" />
        <button type="submit" class="btn btn-primary">Filtrar</button>
    </div>
</form>

@if (Model.Count() < 1)
{
    <p>No Reports to this swimmer</p>
    <br />
    @if (User.IsInRole("Coach"))
    {
        <a asp-controller="Report" asp-action="AddReport" class="btn btn-primary mb-2" asp-route-id="@ViewData["id"]">Add Report to the swimmer</a>
    }
    
}
else
{
    @if (User.IsInRole("Coach"))
    {
        <a asp-controller="Report" asp-action="AddReport" class="btn btn-primary mb-2" asp-route-id="@ViewData["id"]">Add Report to the swimmer</a>
    }
}


<table class="table table-striped table-bordered table-hover mt-3">
    <thead class="table-dark">
            <tr>
                <th>
                    <p>ReportContent</p>
                </th>
                <th>
                    <p>SwimmerName</p>
                </th>

            </tr>
        </thead>
    <tbody class="table-primary">
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Content</td>
                    <td>@item.Enrollment!.Swimmer!.Name</td>
                </tr>
            }
        </tbody>
    </table>
<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }),
            new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5,
        DisplayEllipsesWhenNotShowingAllPageNumbers = true,
        EllipsesFormat = "…",
        LinkToFirstPageFormat = "Primera",
        LinkToLastPageFormat = "Última",
        LinkToPreviousPageFormat = "Anterior",
        LinkToNextPageFormat = "Siguiente",
        ContainerDivClasses = new[] { "pagination-container" },
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    }
            )
</div>


